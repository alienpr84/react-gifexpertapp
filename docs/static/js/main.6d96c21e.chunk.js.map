{"version":3,"sources":["components/AddCategory.js","helper/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prev","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","images","downsized_medium","username","title","useFetchGifs","loading","state","setState","useEffect","then","GifGridItem","className","src","alt","GifGrid","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mLAgCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAiB1C,OACC,8BACC,sBAAMC,SAZe,SAACC,GACvBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOd,SACC,uBACCO,MAASR,EACTS,SAnB6B,SAACN,GACjCF,EAAcE,EAAEO,OAAOF,QAmBpBG,YAAY,uB,+BCNFC,EAnBF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACTC,EADS,0FAEqEC,UAAWH,GAFhF,qBAGII,MAAMF,GAHV,cAGTG,EAHS,gBAIQA,EAAKC,OAJb,uBAIPC,EAJO,EAIPA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACNC,GAAID,EAAIC,GACRT,IAAKQ,EAAIE,OAAOC,iBAAiBX,IACjCY,SAAUJ,EAAII,SACdC,MAAOL,EAAIK,UAXE,kBAeRP,GAfQ,4CAAH,sDCuBEQ,EAnBM,SAAEhB,GAAe,IAAD,EACRd,mBAAS,CACpCqB,KAAM,GACNU,SAAS,IAH0B,mBAC5BC,EAD4B,KACrBC,EADqB,KAgBpC,OAVAC,qBAAU,WACTrB,EAASC,GACPqB,MAAM,SAAAT,GACNO,EAAS,CACRZ,KAAMK,EACNK,SAAS,SAGV,CAACjB,EAAUmB,IAEPD,GClBKI,EAAc,SAAC,GAAsB,IAAnBP,EAAkB,EAAlBA,MAAOb,EAAW,EAAXA,IACrC,OACC,sBAAKqB,UAAU,OAAf,UACC,qBAAKC,IAAMtB,EAAMuB,IAAMV,IACvB,4BAAKA,QCkBOW,EArBC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EACCgB,EAAchB,GAAlCY,EADmB,EACzBL,KAAcU,EADW,EACXA,QAErB,OACE,gCACE,6BAAKjB,IAENiB,GAAW,aAEV,qBAAKM,UAAU,YAAf,SACGX,EAAOH,KAAI,SAACkB,GAAD,OACV,cAAC,EAAD,eAEAA,GADCA,EAAIhB,aCOAiB,EAlBM,WAAO,IAAD,EACU1C,mBAAS,CAAC,aADpB,mBACnB2C,EADmB,KACP5C,EADO,KAGzB,OACE,qCACE,8CACH,cAAC,EAAD,CAAaA,cAAgBA,IAC1B,uBAEH,6BAEC4C,EAAWpB,KAAK,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,Y,MCV/C8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6d96c21e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleOnChangeInputValue = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t}\r\n\r\n\tconst handleOnSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tif(inputValue.trim().length > 2) {\r\n\t\t\tsetCategories( prev => [inputValue, ...prev]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form onSubmit={handleOnSubmit}>\r\n\t\t\t\t<input \r\n\t\t\t\t\tvalue= { inputValue }\r\n\t\t\t\t\tonChange={ handleOnChangeInputValue }\r\n\t\t\t\t\tplaceholder=\"Enter a value\"\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AddCategory;\r\n","const getGifs = async ( category ) => {\r\n\tconst url =\r\n\t\t`https://api.giphy.com/v1/gifs/search?api_key=ipZmsuwG6UWaXE3WajDRg76EMK780XON&q=${encodeURI( category )}&limit=5`;\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map((gif) => {\r\n\t\treturn {\r\n\t\t\tid: gif.id,\r\n\t\t\turl: gif.images.downsized_medium.url,\r\n\t\t\tusername: gif.username,\r\n\t\t\ttitle: gif.title,\r\n\t\t};\r\n\t});\r\n\r\n\treturn gifs;\r\n};\r\n\r\n\r\nexport default getGifs;","import { useState , useEffect } from 'react'\r\nimport getGifs from '../helper/getGifs';\r\n\r\n\r\nconst useFetchGifs = ( category ) => {\r\n\tconst [ state, setState ] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs( category )\r\n\t\t\t.then( images => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: images,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t} )\r\n\t}, [category, setState]);\r\n\r\n\treturn state;\r\n}\r\n\r\nexport default useFetchGifs;","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<img src={ url } alt={ title } />\r\n\t\t\t<p>{ title }</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs( category )\r\n\r\n  return (\r\n    <div>\r\n      <h3>{category}</h3>\r\n\r\n\t\t\t{ loading && 'loading...' }\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem\r\n\t\t\t\t\t\tkey={img.id}\r\n\t\t\t\t\t\t{...img}\r\n\t\t\t\t\t/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState } from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState(['One push']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={ setCategories } />\r\n      <hr />\r\n\r\n\t\t\t<ul>\r\n\t\t\t{\r\n\t\t\t\tcategories.map( category => <GifGrid key={ category } category={ category }/>)\r\n\t\t\t}\r\n\t\t\t</ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}